/*
File:	utils/sqlserver/all_semesters.sql

Desc:	 Both the SQL Server object and supporting code - uses ALL_SEMESTERS in CDM.

See also:
		CDM/all/all_semesters.sql
		CDM/all/vw_semester.sql
		utils/sqlserver/vw_semester.sql
		
Note 1:	Objects in this file are dependent upon CDM - ALL_SEMESTERS

Usage:	exec  dbo.REFRESH_ALL_SEMESTERS ;  ...scheduled as job: [AAA Refresh_All_Semesters]

Author:	Vern Huber
*/
use MSDB

create table dbo.ALL_SEMESTERS(
	CURRENT_TERM varchar(6)			NOT NULL,
	PREVIOUS_TERM varchar(6) NOT NULL,
	NEXT_TERM varchar(6) NOT NULL,
	NEXT_FALL_TERM varchar(6) NOT NULL,
	EFF_START_DT datetime2(7) NULL,
	EFF_END_DT datetime2(7) NULL,
	TERM_START_DT datetime2(7) NOT NULL,
	TERM_END_DT datetime2(7) NOT NULL,
	CUR_TERM_NAME varchar(11) NULL,
	PREV_TERM_NAME varchar(11) NULL,
	NEXT_TERM_NAME varchar(11) NULL,
	NEXT_FALL_TERM_NAME varchar(9) NULL,
	TERM_CD_CAMPUS_CD varchar(3) NOT NULL,
	TERM_CD_CAMPUS_NAME varchar(30) NOT NULL,
	CUR_SEM_CODE varchar(1) NULL,
	PREV_SEM_CODE varchar(1) NULL,
	NEXT_SEM_CODE varchar(1) NULL,
	ACADEMIC_YEAR varchar(4) NOT NULL,
	TERM_HOUSING_START_DT datetime2(7) NOT NULL,
	TERM_HOUSING_END_DT datetime2(7) NOT NULL,
	TERM_TYPE_CD varchar(1) NOT NULL,
	TERM_EDW_EFF_DT datetime2(7) NOT NULL,
	TERM_POST_DT datetime2(7) NOT NULL,
	CENSUS_DT datetime2(7) NULL,
	Next_ACADEMIC_YR 		varchar(4), 	-- added 11/8/2021
	Prev_ACADEMIC_YR 		varchar(4) 
);
--
alter table dbo.ALL_SEMESTERS	Next_ACADEMIC_YR_CD		varchar(4);
alter table dbo.ALL_SEMESTERS	Prev_ACADEMIC_YR_CD		varchar(4) ;
alter table dbo.ALL_SEMESTERS	ACADEMIC_YR_CD	varchar(4) ;


-- Procedure to refresh table in SQL Server.
-- 
alter procedure dbo.REFRESH_ALL_SEMESTERS
as
begin
   begin TRY
    set nocount on;
    
    MERGE  dbo.all_semesters  AS  T
    USING (
	select
      CURRENT_TERM,PREVIOUS_TERM,NEXT_TERM,NEXT_FALL_TERM,EFF_START_DT,EFF_END_DT,TERM_START_DT,TERM_END_DT
      ,CUR_TERM_NAME,PREV_TERM_NAME,NEXT_TERM_NAME,NEXT_FALL_TERM_NAME,TERM_CD_CAMPUS_CD,TERM_CD_CAMPUS_NAME            
      ,CUR_SEM_CODE,PREV_SEM_CODE,NEXT_SEM_CODE
      ,ACADEMIC_YR as ACADEMIC_YEAR,  Next_ACADEMIC_YR,  Prev_ACADEMIC_YR,  Next_ACADEMIC_YR_CD,  Prev_ACADEMIC_YR_CD, ACADEMIC_YR_CD
	  ,TERM_HOUSING_START_DT,TERM_HOUSING_END_DT,TERM_TYPE_CD,TERM_EDW_EFF_DT,TERM_POST_DT,CENSUS_DT
   --
   from openquery( oraprod,  '
      select
         CURRENT_TERM,PREVIOUS_TERM,NEXT_TERM,NEXT_FALL_TERM,EFF_START_DT,EFF_END_DT,TERM_START_DT,TERM_END_DT
         ,CUR_TERM_NAME,PREV_TERM_NAME,NEXT_TERM_NAME,NEXT_FALL_TERM_NAME,TERM_CD_CAMPUS_CD,TERM_CD_CAMPUS_NAME            
         ,CUR_SEM_CODE,PREV_SEM_CODE,NEXT_SEM_CODE
		 ,ACADEMIC_YR,  Next_ACADEMIC_YR,  Prev_ACADEMIC_YR,  substr( Next_ACADEMIC_YR_CD, 1,4) Next_ACADEMIC_YR_CD
		 ,substr( Prev_ACADEMIC_YR_CD, 1,4) Prev_ACADEMIC_YR_CD, ACADEMIC_YR_CD
		 ,TERM_HOUSING_START_DT,TERM_HOUSING_END_DT,TERM_TYPE_CD,TERM_EDW_EFF_DT,TERM_POST_DT,CENSUS_DT 
      from uis_cdm.uis_semesters')
	) AS S (
      CURRENT_TERM,PREVIOUS_TERM,NEXT_TERM,NEXT_FALL_TERM,EFF_START_DT,EFF_END_DT,TERM_START_DT,TERM_END_DT
      ,CUR_TERM_NAME,PREV_TERM_NAME,NEXT_TERM_NAME,NEXT_FALL_TERM_NAME,TERM_CD_CAMPUS_CD,TERM_CD_CAMPUS_NAME            
      ,CUR_SEM_CODE,PREV_SEM_CODE, NEXT_SEM_CODE
	  , ACADEMIC_YEAR,  Next_ACADEMIC_YR,  Prev_ACADEMIC_YR,  Next_ACADEMIC_YR_CD,  Prev_ACADEMIC_YR_CD, ACADEMIC_YR_CD
	  ,TERM_HOUSING_START_DT,TERM_HOUSING_END_DT,TERM_TYPE_CD,TERM_EDW_EFF_DT,TERM_POST_DT,CENSUS_DT
	)
    ON (T.current_term = s.current_term)
    WHEN MATCHED THEN 
        UPDATE SET PREVIOUS_TERM = s.PREVIOUS_TERM,  NEXT_TERM = s.NEXT_TERM,  NEXT_FALL_TERM = s.NEXT_FALL_TERM
		, EFF_START_DT = s.EFF_START_DT,  EFF_END_DT = s.EFF_END_DT,  TERM_START_DT = s.TERM_START_DT, TERM_END_DT = s.TERM_END_DT
        , CUR_TERM_NAME = s.CUR_TERM_NAME,  PREV_TERM_NAME = s.PREV_TERM_NAME,  NEXT_TERM_NAME = s.NEXT_TERM_NAME
		, NEXT_FALL_TERM_NAME = s.NEXT_FALL_TERM_NAME,  TERM_CD_CAMPUS_CD = s.TERM_CD_CAMPUS_CD,  TERM_CD_CAMPUS_NAME = s.TERM_CD_CAMPUS_NAME       
        , CUR_SEM_CODE = s.CUR_SEM_CODE,  PREV_SEM_CODE = s.PREV_SEM_CODE, NEXT_SEM_CODE = s.NEXT_SEM_CODE
        , ACADEMIC_YEAR = s.ACADEMIC_YEAR, Next_ACADEMIC_YR = s.Next_ACADEMIC_YR,  Prev_ACADEMIC_YR = s.prev_ACADEMIC_YR
		, Next_ACADEMIC_YR_CD = s.Next_ACADEMIC_YR_CD,  Prev_ACADEMIC_YR_CD = s.Prev_ACADEMIC_YR_CD, ACADEMIC_YR_CD = s.ACADEMIC_YR_CD		
		, TERM_HOUSING_START_DT = s.TERM_HOUSING_START_DT, TERM_HOUSING_END_DT = s.TERM_HOUSING_END_DT
		, TERM_TYPE_CD = s.TERM_TYPE_CD,  TERM_EDW_EFF_DT = s.TERM_EDW_EFF_DT,  TERM_POST_DT = s.TERM_POST_DT, CENSUS_DT = s.CENSUS_DT
   --
   WHEN NOT MATCHED THEN
      INSERT (
	     CURRENT_TERM,PREVIOUS_TERM,NEXT_TERM,NEXT_FALL_TERM,EFF_START_DT,EFF_END_DT,TERM_START_DT,TERM_END_DT
         ,CUR_TERM_NAME,PREV_TERM_NAME,NEXT_TERM_NAME,NEXT_FALL_TERM_NAME,TERM_CD_CAMPUS_CD,TERM_CD_CAMPUS_NAME            
         ,CUR_SEM_CODE,PREV_SEM_CODE,NEXT_SEM_CODE
		 ,ACADEMIC_YEAR,  Next_ACADEMIC_YR,  prev_ACADEMIC_YR,  Next_ACADEMIC_YR_CD,  Prev_ACADEMIC_YR_CD, ACADEMIC_YR_CD
		 ,TERM_HOUSING_START_DT,TERM_HOUSING_END_DT,TERM_TYPE_CD,TERM_EDW_EFF_DT,TERM_POST_DT,CENSUS_DT
	  ) VALUES (
	    s.CURRENT_TERM, s.PREVIOUS_TERM, s.NEXT_TERM, s.NEXT_FALL_TERM, s.EFF_START_DT,  s.EFF_END_DT, s.TERM_START_DT, s.TERM_END_DT
        , s.CUR_TERM_NAME, s.PREV_TERM_NAME, s.NEXT_TERM_NAME, s.NEXT_FALL_TERM_NAME, s.TERM_CD_CAMPUS_CD, s.TERM_CD_CAMPUS_NAME       
        , s.CUR_SEM_CODE, s.PREV_SEM_CODE, s.NEXT_SEM_CODE
		, s.ACADEMIC_YEAR, s.Next_ACADEMIC_YR,  s.prev_ACADEMIC_YR, s.Next_ACADEMIC_YR_CD, s.Prev_ACADEMIC_YR_CD, s.ACADEMIC_YR_CD
		, s.TERM_HOUSING_START_DT, s.TERM_HOUSING_END_DT, s.TERM_TYPE_CD, s.TERM_EDW_EFF_DT, s.TERM_POST_DT, s.CENSUS_DT
	 );
	
      -- Report on successful run...
      insert into jobsLog.dbo.log (jobName, body, retcode, serverName ) 
	  values( 'Refresh_All_Semesters', 'SUCCESS', 1, @@servername );   
   end TRY
   begin CATCH
   -- Report on successful run...
      insert into jobsLog.dbo.log (jobname, body, retcode, serverName ) 
	  values( 'Refresh_All_Semesters', 'FAILURE: error = ' + ERROR_NUMBER(), -1, @@serverName ); 
   end CATCH   
end;
